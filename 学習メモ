✅9/25【Next.jsで学ぶReact講座 #14】
イミュータブルや破壊的メソッドを理解しよう！スプレッド構文を使う理由とは！？

##JSの値にはミュータブルとイミュータブルについて
- ミュータブル：変更可能なオブジェクト
- イミュータブル：変更不可能なオブジェクト（推奨✨）

⭐️JSは配列とオブジェクトはミュータブル、文字列はイミュータブル
破壊的メソッドは避けて、イミュータブルなメソッドを使うことが望ましい
そのためにスプレッド構文やmapメソッドを使う

##Reactにおいてもイミュータブルな値を使うことが推奨されている
破壊的メソッドは、再レンダリングが行われないため、Reactのパフォーマンスが悪くなる

  const handleAdd = useCallback(() => {
    setArray((prevArray) => {
      const newArray = prevArray;
      newArray.push(1);
      console.log(newArray === prevArray); //true

      ↑この場合、新しい配列を作成していないため、同じ配列を参照している
      ⭐️newArrayは、prevArrayと同じ配列を参照しているため、Reactは再レンダリングを行わない

      return newArray;
    });
  }, []);

📝someメソッドとは？
配列の中に条件に合致する要素があるかどうかを判定するメソッド


